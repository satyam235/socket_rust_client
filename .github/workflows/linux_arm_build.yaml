name: Build Linux ARM (aarch64)

on: [push, pull_request]

jobs:
  linux-aarch64:
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4

      - name : check os and arch
        run: |
          uname -a
          uname -m

      - name: Install system dependencies 
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            musl-tools \
            musl-dev \
            libssl-dev \
            pkg-config \
            wget \
            build-essential \
            linux-libc-dev \
            linux-headers-$(uname -r) \
            gcc-aarch64-linux-gnu \
            crossbuild-essential-arm64

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: aarch64-unknown-linux-musl
          default: true

      - name: Download and Compile OpenSSL for musl
        run: |
          # openssl
          wget https://www.openssl.org/source/openssl-1.1.1e.tar.gz
          tar zxf openssl-1.1.1e.tar.gz

          # a toolchain I know is working
          wget "https://developer.arm.com/-/media/Files/downloads/gnu-a/9.2-2019.12/binrel/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz?revision=61c3be5d-5175-4db6-9030-b565aae9f766&la=en&hash=0A37024B42028A9616F56A51C2D20755C5EBBCD7" -O gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz
          mkdir -p /opt/arm/9
          tar Jxf gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz -C /opt/arm/9

          # building
          cd openssl-1.1.1e
          ./Configure linux-aarch64 --cross-compile-prefix=/opt/arm/9/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu- --prefix=/opt/openssl-1.1.1e --openssldir=/opt/openssl-1.1.1e -static
          make install

          ls -gG /opt/openssl-1.1.1e/bin/

          file /opt/openssl-1.1.1e/bin/openssl
          /opt/openssl-1.1.1e/bin/openssl: ELF 64-bit LSB executable, ARM aarch64, version 1 (GNU/Linux), statically linked, for GNU/Linux 3.7.0, with debug_info, not stripped


      - name: Build binary
        run: |
          cargo build --release --target aarch64-unknown-linux-musl
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"
          OPENSSL_STATIC: 1
          OPENSSL_DIR: /usr/local/musl
          OPENSSL_INCLUDE_DIR: /usr/local/musl/include
          OPENSSL_LIB_DIR: /usr/local/musl/lib
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_PATH: /usr/local/musl/lib/pkgconfig

      - name: Optimize and package binary
        run: |
          cd target/aarch64-unknown-linux-musl/release
          strip socketio_example
          chmod +x socketio_example
          tar -czvf socketio_example-linux-aarch64.tar.gz socketio_example

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: socketio_example-linux-aarch64
          path: target/aarch64-unknown-linux-musl/release/socketio_example-linux-aarch64.tar.gz
