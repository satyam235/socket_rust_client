name: Build Linux ARM (aarch64)

on: [push, pull_request]

jobs:
  linux-aarch64:
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies 
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            musl-tools \
            musl-dev \
            libssl-dev \
            pkg-config \
            wget \
            build-essential \
            linux-libc-dev \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            crossbuild-essential-arm64

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: aarch64-unknown-linux-musl
          default: true

      - name: Download and Compile OpenSSL for musl
        run: |
          wget https://www.openssl.org/source/openssl-1.1.1w.tar.gz
          tar xzf openssl-1.1.1w.tar.gz
          cd openssl-1.1.1w
          export CC=aarch64-linux-musl-gcc
          export CXX=aarch64-linux-musl-g++
          export AR=aarch64-linux-musl-ar
          export RANLIB=aarch64-linux-musl-ranlib
          ./Configure linux-aarch64 --cross-compile-prefix=aarch64-linux-musl-
          make -j$(nproc)
          sudo make install_sw
          echo "/usr/local/musl/lib" | sudo tee -a /etc/ld.so.conf.d/musl.conf
          sudo ldconfig


      - name: Build binary
        run: |
          cargo build --release --target aarch64-unknown-linux-musl
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"
          OPENSSL_STATIC: 1
          OPENSSL_DIR: /usr/local/musl
          OPENSSL_INCLUDE_DIR: /usr/local/musl/include
          OPENSSL_LIB_DIR: /usr/local/musl/lib
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_PATH: /usr/local/musl/lib/pkgconfig

      - name: Optimize and package binary
        run: |
          cd target/aarch64-unknown-linux-musl/release
          strip socketio_example
          chmod +x socketio_example
          tar -czvf socketio_example-linux-aarch64.tar.gz socketio_example

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: socketio_example-linux-aarch64
          path: target/aarch64-unknown-linux-musl/release/socketio_example-linux-aarch64.tar.gz
