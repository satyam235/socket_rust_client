name: release-binaries
on:
  push:
    branches: [ main ]

jobs:
  linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            musl-tools \
            musl-dev \
            libssl-dev \
            pkg-config \
            wget \
            build-essential \
            linux-libc-dev \
            linux-headers-$(uname -r)

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-musl
          default: true

      - name: Download and Compile OpenSSL for musl
        run: |
          wget https://www.openssl.org/source/openssl-1.1.1w.tar.gz
          tar xzf openssl-1.1.1w.tar.gz
          cd openssl-1.1.1w

          ./Configure no-shared no-async \
            --prefix=/usr/local/musl \
            --openssldir=/usr/local/musl \
            linux-x86_64

          make -j$(nproc)
          sudo make install_sw

          # Ensure correct library paths
          echo "/usr/local/musl/lib" | sudo tee -a /etc/ld.so.conf.d/musl.conf
          sudo ldconfig

      - name: Build binary
        run: |
          cargo build --release --target x86_64-unknown-linux-musl
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"
          OPENSSL_STATIC: 1
          OPENSSL_DIR: /usr/local/musl
          OPENSSL_INCLUDE_DIR: /usr/local/musl/include
          OPENSSL_LIB_DIR: /usr/local/musl/lib
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_PATH: /usr/local/musl/lib/pkgconfig

      - name: Optimize and package binary
        run: |
          cd target/x86_64-unknown-linux-musl/release
          strip socketio_example
          chmod +x socketio_example
          tar -czvf socketio_example-linux-x86_64.tar.gz socketio_example

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: socketio_example-linux-x86_64
          path: target/x86_64-unknown-linux-musl/release/socketio_example-linux-x86_64.tar.gz

  macos-x86_64:
  runs-on: macos-latest
  steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          brew install openssl

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true

      - name: Set Environment Variables
        run: |
          echo "OPENSSL_DIR=$(brew --prefix openssl)" >> $GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=$(brew --prefix openssl)/include" >> $GITHUB_ENV
          echo "OPENSSL_LIB_DIR=$(brew --prefix openssl)/lib" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$(brew --prefix openssl)/lib/pkgconfig" >> $GITHUB_ENV

      - name: Build Binary
        run: cargo build --release
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"
          OPENSSL_STATIC: 1

      - name: Optimize and Package Binary
        run: |
          cd target/release
          strip socketio_example
          chmod +x socketio_example
          tar -czvf socketio_example-macos-x86_64.tar.gz socketio_example

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: socketio_example-macos-x86_64
          path: target/release/socketio_example-macos-x86_64.tar.gz


  windows-x86_64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      
      - name: Build binary
        run: cargo build --release
      
      - name: Create ZIP archive
        run: Compress-Archive -Path target/release/socketio_example.exe -DestinationPath target/release/socketio_example-windows-x86_64.zip

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: socketio_example-windows-x86_64
          path: target/release/socketio_example-windows-x86_64.zip