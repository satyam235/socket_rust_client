name: Rust Linux x86_64 Static Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Static Binary on Linux x86_64
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-musl
        override: true
        components: rustfmt, clippy

    - name: Install musl tools
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-tools musl-dev

    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Create .cargo/config.toml for static linking
      run: |
        mkdir -p .cargo
        echo '[target.x86_64-unknown-linux-musl]' > .cargo/config.toml
        echo 'linker = "musl-gcc"' >> .cargo/config.toml
        echo 'rustflags = ["-C", "target-feature=+crt-static"]' >> .cargo/config.toml

    - name: Build Static Binary
      run: |
        RUSTFLAGS="-C target-feature=+crt-static" cargo build --release --target x86_64-unknown-linux-musl

    - name: Prepare artifact
      run: |
        cp target/x86_64-unknown-linux-musl/release/socketio_example socketio_agent-linux-x86_64-static
        chmod +x socketio_agent-linux-x86_64-static

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: socketio-agent-linux-x86_64-static
        path: socketio_agent-linux-x86_64-static
        
  create-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: List and prepare artifacts
      run: |
        ls -la
        find . -name "socketio_agent-linux-x86_64-static"
        cp socketio-agent-linux-x86_64-static/socketio_agent-linux-x86_64-static ./socketio_example
        chmod +x ./socketio_example

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: socketio_example
        tag_name: v0.1.0-${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}