name: release-binaries
on:
  push:
    branches: [ main ]

jobs:
  linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-musl
          default: true
      
      # Install musl tools for static linking
      - name: Install musl tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-unknown-linux-musl
          use-cross: true
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"

      - name: Optimize and package binary
        run: |
          cd target/x86_64-unknown-linux-musl/release
          strip naru
          chmod +x naru
          tar -czvf naru-linux-x86_64.tar.gz naru

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: naru-${{ github.event.release.tag_name }}-linux-x86_64.tar.gz
          asset_path: target/x86_64-unknown-linux-musl/release/naru-linux-x86_64.tar.gz
          upload_url: ${{ github.event.release.upload_url }}

  macos-x86_64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - name: Optimize and package binary
        run: |
          cd target/release
          strip naru
          chmod +x naru
          mkdir dmg
          mv naru dmg/
          hdiutil create -fs HFS+ -srcfolder dmg -volname naru naru.dmg

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: naru-${{ github.event.release.tag_name }}-macos-x86_64.dmg
          asset_path: target/release/naru.dmg
          upload_url: ${{ github.event.release.upload_url }}

  windows-x86_64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - name: Create ZIP archive
        run: Compress-Archive -Path target/release/naru.exe -DestinationPath target/release/naru-windows-x86_64.zip

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: naru-${{ github.event.release.tag_name }}-windows-x86_64.zip
          asset_path: target/release/naru-windows-x86_64.zip
          upload_url: ${{ github.event.release.upload_url }}