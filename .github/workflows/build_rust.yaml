name: Rust Linux x86_64 Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build on Linux x86_64
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        override: true

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release

    - name: Rename binary
      run: |
        cp target/release/$(find target/release -maxdepth 1 -type f -executable -printf "%f\n" | head -n 1) rust-socket-agent-linux-x86_64

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rust-socket-agent-linux-x86_64
        path: rust-socket-agent-linux-x86_64
        
  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create tag
      id: create_tag
      run: |
        timestamp=$(date +'%Y%m%d%H%M%S')
        tag_name="v0.1.0-${timestamp}"
        echo "TAG_NAME=${tag_name}" >> $GITHUB_OUTPUT
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag ${tag_name}
        git push origin ${tag_name}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: rust-socket-agent-linux-x86_64
        tag_name: ${{ steps.create_tag.outputs.TAG_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}